name: Deploy to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Check secrets
        run: |
          echo "EC2_USER is ${{ secrets.EC2_USER }}"
          echo "EC2_HOST is ${{ secrets.EC2_HOST }}"
          echo "MONGODB_URI is ${{ secrets.MONGODB_URI }}"

      - name: Build Docker image
        run: |
          docker build -t cosmoscraper .

      - name: Save Docker image to a tarball
        run: |
          docker save cosmoscraper -o cosmoscraper.tar

      - name: Transfer Docker image to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa cosmoscraper.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/cosmoscraper.tar

      - name: Deploy Docker image on EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          PORT: ${{ secrets.PORT }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker load -i /home/ubuntu/cosmoscraper.tar
          docker stop cosmoscraper || true
          docker rm cosmoscraper || true
          docker run -d --name cosmoscraper -p 5000:5000 \
            -e MONGODB_URI=$MONGODB_URI \
            -e PORT=$PORT \
            cosmoscraper
          EOF